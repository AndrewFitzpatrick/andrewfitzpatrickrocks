{"ast":null,"code":"var _jsxFileName = \"/Users/Fitz/Sites/rocks/andrewfitzpatrickrocks/src/components/PageSlider.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nrequire('./../transitions.scss');\n\nconst BlankPage = props => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"placeholder\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 30\n  }\n});\n\nclass PageSlider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.transition = (Page, fromDir) => {\n      if (this.state.nextRoute !== Page) {\n        let leavingClass, enteringClass;\n        let pages = Object.assign({}, this.state.pages);\n        const current = this.state.currentPage;\n        const next = current === 'A' ? 'B' : 'A';\n\n        if (fromDir === \"right\") {\n          enteringClass = 'slideFromRight';\n          leavingClass = 'slideOutLeft';\n        } else {\n          enteringClass = 'slideFromLeft';\n          leavingClass = 'slideOutRight';\n        }\n\n        pages[next] = {\n          key: 'unique',\n          component: Page,\n          className: enteringClass\n        };\n        pages[current].className = leavingClass;\n        this.setState({\n          pages: pages,\n          nextRoute: Page,\n          currentPage: next\n        });\n      }\n    };\n\n    this.state = {\n      nextRoute: props.page,\n      pages: {\n        A: {\n          key: 'A',\n          component: BlankPage,\n          className: 'placeholder'\n        },\n        B: {\n          key: 'B',\n          component: BlankPage,\n          className: 'placeholder'\n        }\n      },\n      currentPage: 'A'\n    };\n  }\n\n  componentDidMount() {\n    //start initial animation of incoming\n    let B = {\n      key: 'b',\n      component: this.state.nextRoute,\n      className: 'slideFromRight'\n    }; //new one\n\n    let A = Object.assign({}, this.state.pages.A, {\n      className: 'slideOutLeft'\n    }); //exiting\n\n    this.setState({\n      pages: {\n        A: A,\n        B: B\n      },\n      currentPage: 'B'\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.page != this.state.nextRoute) {\n      this.transition(nextProps.page, nextProps.fromDir);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"container\",\n      style: {\n        position: 'relative',\n        minHeight: '100vh',\n        overflow: 'hidden'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, React.createElement('div', {\n      key: 'A',\n      className: this.state.pages.A.className\n    }, /*#__PURE__*/React.createElement(this.state.pages.A.component, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 90\n      }\n    })), React.createElement('div', {\n      key: 'B',\n      className: this.state.pages.B.className\n    }, /*#__PURE__*/React.createElement(this.state.pages.B.component, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 91\n      }\n    })));\n  }\n\n}\n\nPageSlider.propTypes = {\n  page: PropTypes.func.isRequired,\n  fromDir: PropTypes.string.isRequired\n};\nexport default PageSlider;","map":{"version":3,"sources":["/Users/Fitz/Sites/rocks/andrewfitzpatrickrocks/src/components/PageSlider.js"],"names":["React","Component","PropTypes","require","BlankPage","props","PageSlider","constructor","transition","Page","fromDir","state","nextRoute","leavingClass","enteringClass","pages","Object","assign","current","currentPage","next","key","component","className","setState","page","A","B","componentDidMount","componentWillReceiveProps","nextProps","render","position","minHeight","overflow","createElement","propTypes","func","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEAC,OAAO,CAAC,uBAAD,CAAP;;AAEA,MAAMC,SAAS,GAAIC,KAAD,iBAAW;AAAK,EAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAA7B;;AAEA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AACjCM,EAAAA,WAAW,CAACF,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAyBnBG,UAzBmB,GAyBN,CAACC,IAAD,EAAOC,OAAP,KAAmB;AAC9B,UAAI,KAAKC,KAAL,CAAWC,SAAX,KAAyBH,IAA7B,EAAmC;AAChC,YAAII,YAAJ,EAAkBC,aAAlB;AACA,YAAIC,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKN,KAAL,CAAWI,KAA7B,CAAZ;AACA,cAAMG,OAAO,GAAG,KAAKP,KAAL,CAAWQ,WAA3B;AACA,cAAMC,IAAI,GAAIF,OAAO,KAAK,GAAZ,GAAkB,GAAlB,GAAwB,GAAtC;;AACA,YAAIR,OAAO,KAAK,OAAhB,EAAyB;AACvBI,UAAAA,aAAa,GAAG,gBAAhB;AACAD,UAAAA,YAAY,GAAG,cAAf;AACD,SAHD,MAGO;AACLC,UAAAA,aAAa,GAAG,eAAhB;AACAD,UAAAA,YAAY,GAAG,eAAf;AACD;;AACDE,QAAAA,KAAK,CAACK,IAAD,CAAL,GAAc;AAACC,UAAAA,GAAG,EAAE,QAAN;AAAgBC,UAAAA,SAAS,EAAEb,IAA3B;AAAiCc,UAAAA,SAAS,EAAET;AAA5C,SAAd;AACAC,QAAAA,KAAK,CAACG,OAAD,CAAL,CAAeK,SAAf,GAA2BV,YAA3B;AACA,aAAKW,QAAL,CAAc;AAACT,UAAAA,KAAK,EAAEA,KAAR;AAAeH,UAAAA,SAAS,EAAEH,IAA1B;AAAgCU,UAAAA,WAAW,EAAEC;AAA7C,SAAd;AACF;AACF,KA1CkB;;AAEjB,SAAKT,KAAL,GAAa;AACVC,MAAAA,SAAS,EAAEP,KAAK,CAACoB,IADP;AAEVV,MAAAA,KAAK,EAAE;AACNW,QAAAA,CAAC,EAAE;AAACL,UAAAA,GAAG,EAAE,GAAN;AAAWC,UAAAA,SAAS,EAAElB,SAAtB;AAAiCmB,UAAAA,SAAS,EAAE;AAA5C,SADG;AAENI,QAAAA,CAAC,EAAE;AAACN,UAAAA,GAAG,EAAE,GAAN;AAAWC,UAAAA,SAAS,EAAElB,SAAtB;AAAiCmB,UAAAA,SAAS,EAAE;AAA5C;AAFG,OAFG;AAMVJ,MAAAA,WAAW,EAAE;AANH,KAAb;AAQD;;AAEDS,EAAAA,iBAAiB,GAAG;AAClB;AACA,QAAID,CAAC,GAAG;AAACN,MAAAA,GAAG,EAAE,GAAN;AAAWC,MAAAA,SAAS,EAAE,KAAKX,KAAL,CAAWC,SAAjC;AAA4CW,MAAAA,SAAS,EAAE;AAAvD,KAAR,CAFkB,CAEgE;;AAClF,QAAIG,CAAC,GAAGV,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKN,KAAL,CAAWI,KAAX,CAAiBW,CAAnC,EAAsC;AAACH,MAAAA,SAAS,EAAE;AAAZ,KAAtC,CAAR,CAHkB,CAG0D;;AAC5E,SAAKC,QAAL,CAAc;AAACT,MAAAA,KAAK,EAAE;AAACW,QAAAA,CAAC,EAAEA,CAAJ;AAAOC,QAAAA,CAAC,EAAEA;AAAV,OAAR;AAAsBR,MAAAA,WAAW,EAAE;AAAnC,KAAd;AACD;;AAEDU,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,QAAIA,SAAS,CAACL,IAAV,IAAkB,KAAKd,KAAL,CAAWC,SAAjC,EAA4C;AAC1C,WAAKJ,UAAL,CAAgBsB,SAAS,CAACL,IAA1B,EAAgCK,SAAS,CAACpB,OAA1C;AACD;AACF;;AAsBDqB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,EAAE,EAAC,WAAR;AAAoB,MAAA,KAAK,EAAE;AACzBC,QAAAA,QAAQ,EAAE,UADe;AAEzBC,QAAAA,SAAS,EAAE,OAFc;AAGzBC,QAAAA,QAAQ,EAAE;AAHe,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGlC,KAAK,CAACmC,aAAN,CAAoB,KAApB,EAA2B;AAACd,MAAAA,GAAG,EAAE,GAAN;AAAWE,MAAAA,SAAS,EAAE,KAAKZ,KAAL,CAAWI,KAAX,CAAiBW,CAAjB,CAAmBH;AAAzC,KAA3B,eAAgF,yBAAM,KAAN,CAAY,KAAZ,CAAkB,CAAlB,CAAoB,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhF,CALH,EAMGvB,KAAK,CAACmC,aAAN,CAAoB,KAApB,EAA2B;AAACd,MAAAA,GAAG,EAAE,GAAN;AAAWE,MAAAA,SAAS,EAAE,KAAKZ,KAAL,CAAWI,KAAX,CAAiBY,CAAjB,CAAmBJ;AAAzC,KAA3B,eAAiF,yBAAM,KAAN,CAAY,KAAZ,CAAkB,CAAlB,CAAoB,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjF,CANH,CADF;AAUD;;AAzDgC;;AA8DnCjB,UAAU,CAAC8B,SAAX,GAAuB;AACrBX,EAAAA,IAAI,EAAEvB,SAAS,CAACmC,IAAV,CAAeC,UADA;AAErB5B,EAAAA,OAAO,EAAER,SAAS,CAACqC,MAAV,CAAiBD;AAFL,CAAvB;AAKA,eAAehC,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nrequire('./../transitions.scss');\n\nconst BlankPage = (props) => <div className=\"placeholder\"></div>;\n\nclass PageSlider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n       nextRoute: props.page,\n       pages: {\n        A: {key: 'A', component: BlankPage, className: 'placeholder'},\n        B: {key: 'B', component: BlankPage, className: 'placeholder'},\n       },\n       currentPage: 'A'\n    };\n  }\n\n  componentDidMount() {\n    //start initial animation of incoming\n    let B = {key: 'b', component: this.state.nextRoute, className: 'slideFromRight'}; //new one\n    let A = Object.assign({}, this.state.pages.A, {className: 'slideOutLeft'}); //exiting\n    this.setState({pages: {A: A, B: B}, currentPage: 'B'});\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.page != this.state.nextRoute) {\n      this.transition(nextProps.page, nextProps.fromDir);\n    }\n  }\n\n  transition = (Page, fromDir) => {\n    if (this.state.nextRoute !== Page) {\n       let leavingClass, enteringClass;\n       let pages = Object.assign({}, this.state.pages);\n       const current = this.state.currentPage;\n       const next = (current === 'A' ? 'B' : 'A');\n       if (fromDir === \"right\") {\n         enteringClass = 'slideFromRight';\n         leavingClass = 'slideOutLeft';\n       } else {\n         enteringClass = 'slideFromLeft';\n         leavingClass = 'slideOutRight';\n       }\n       pages[next] = {key: 'unique', component: Page, className: enteringClass};\n       pages[current].className = leavingClass;\n       this.setState({pages: pages, nextRoute: Page, currentPage: next});\n    }\n  }\n\n\n  render() {\n    return (\n      <div id=\"container\" style={{\n        position: 'relative',\n        minHeight: '100vh',\n        overflow: 'hidden'\n      }}>\n        {React.createElement('div', {key: 'A', className: this.state.pages.A.className}, <this.state.pages.A.component />)}\n        {React.createElement('div', {key: 'B', className: this.state.pages.B.className} , <this.state.pages.B.component />)}\n       </div>\n  );\n  }\n\n}\n\n\nPageSlider.propTypes = {\n  page: PropTypes.func.isRequired,\n  fromDir: PropTypes.string.isRequired\n};\n\nexport default PageSlider;"]},"metadata":{},"sourceType":"module"}