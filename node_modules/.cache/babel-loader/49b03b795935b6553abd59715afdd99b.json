{"ast":null,"code":"var _jsxFileName = \"/Users/Fitz/Sites/rocks/andrewfitzpatrickrocks/src/Routes.js\";\nimport React from 'react';\nimport Route from 'react-router-dom/Route';\nimport { spring, AnimatedSwitch } from 'react-router-transition';\nimport Home from \"./pages/home\";\nimport About from \"./pages/about\";\nimport Contact from \"./pages/contact\"; // we need to map the `scale` prop we define below\n// to the transform style property\n\nfunction mapStyles(styles) {\n  return {\n    opacity: styles.opacity,\n    transform: `scale(${styles.scale})`\n  };\n} // wrap the `spring` helper to use a bouncy config\n\n\nfunction bounce(val) {\n  return spring(val, {\n    stiffness: 330,\n    damping: 22\n  });\n} // child matches will...\n\n\nconst bounceTransition = {\n  // start in a transparent, upscaled state\n  atEnter: {\n    opacity: 0,\n    scale: 1.2\n  },\n  // leave in a transparent, downscaled state\n  atLeave: {\n    opacity: bounce(0),\n    scale: bounce(0.8)\n  },\n  // and rest at an opaque, normally-scaled state\n  atActive: {\n    opacity: bounce(1),\n    scale: bounce(1)\n  }\n};\nexport default (() => /*#__PURE__*/React.createElement(Router, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(AnimatedSwitch, {\n  atEnter: bounceTransition.atEnter,\n  atLeave: bounceTransition.atLeave,\n  atActive: bounceTransition.atActive,\n  mapStyles: mapStyles,\n  className: \"route-wrapper\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Route, {\n  path: \"/a\",\n  component: Home,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/b\",\n  component: About,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/c\",\n  component: Contact,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }\n})))); // // src/Routes.js\n// import React from \"react\";\n// import { BrowserRouter as Router } from \"react-router-dom\";\n// import Route from 'react-router-dom/Route';\n// import { spring, AnimatedSwitch } from 'react-router-transition';\n// // Import pages\n// import Home from \"./pages/home\";\n// import About from \"./pages/about\";\n// import Contact from \"./pages/contact\";\n// import Restaurants from \"./pages/restaurants\";\n// import Pinball from \"./pages/pacific-pinball\";\n// import Fitztastic from \"./pages/fitztastic\";\n// // we need to map the `scale` prop we define below\n// // to the transform style property\n// function mapStyles(styles) {\n//   return {\n//     opacity: styles.opacity,\n//     transform: `translateX(${styles.offset}%)`,\n//   };\n// }\n// // wrap the `spring` helper to use a bouncy config\n// function bounce(val) {\n//   return spring(val, {\n//     stiffness: 330,\n//     damping: 22,\n//   });\n// }\n// // child matches will...\n// const bounceTransition = {\n//   // start in a transparent, upscaled state\n//   atEnter: {\n//     opacity: 0,\n//     offset: -100,\n//   },\n//   // leave in a transparent, downscaled state\n//   atLeave: {\n//     opacity: bounce(0),\n//     offset: -100,\n//   },\n//   // and rest at an opaque, normally-scaled state\n//   atActive: {\n//     opacity: bounce(1),\n//     offset: 0,\n//   },\n// };\n// const Routes = () => {\n//   return (\n//     <Router>\n//       <AnimatedSwitch\n//         atEnter={bounceTransition.atEnter}\n//         atLeave={bounceTransition.atLeave}\n//         atActive={bounceTransition.atActive}\n//         mapStyles={mapStyles}\n//         className=\"route-wrapper\"\n//       >\n//         <Route exact path=\"/\" component={Home} />\n//         <Route path=\"/about\" component={About} />\n//         <Route path=\"/contact\" component={Contact} />\n//         <Route path=\"/sciarra-restaurants\" component={Restaurants} />\n//         <Route path=\"/pacific-pinball\" conponent={Pinball} />\n//         <Route path=\"/fitztastic\" conponent={Fitztastic} />\n//       </AnimatedSwitch>\n//     </Router>\n//   );\n// };\n// export default Routes;","map":{"version":3,"sources":["/Users/Fitz/Sites/rocks/andrewfitzpatrickrocks/src/Routes.js"],"names":["React","Route","spring","AnimatedSwitch","Home","About","Contact","mapStyles","styles","opacity","transform","scale","bounce","val","stiffness","damping","bounceTransition","atEnter","atLeave","atActive"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,SAASC,MAAT,EAAiBC,cAAjB,QAAuC,yBAAvC;AAEA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,OAAP,MAAoB,iBAApB,C,CAEA;AACA;;AACA,SAASC,SAAT,CAAmBC,MAAnB,EAA2B;AACzB,SAAO;AACLC,IAAAA,OAAO,EAAED,MAAM,CAACC,OADX;AAELC,IAAAA,SAAS,EAAG,SAAQF,MAAM,CAACG,KAAM;AAF5B,GAAP;AAID,C,CAED;;;AACA,SAASC,MAAT,CAAgBC,GAAhB,EAAqB;AACnB,SAAOX,MAAM,CAACW,GAAD,EAAM;AACjBC,IAAAA,SAAS,EAAE,GADM;AAEjBC,IAAAA,OAAO,EAAE;AAFQ,GAAN,CAAb;AAID,C,CAED;;;AACA,MAAMC,gBAAgB,GAAG;AACvB;AACAC,EAAAA,OAAO,EAAE;AACPR,IAAAA,OAAO,EAAE,CADF;AAEPE,IAAAA,KAAK,EAAE;AAFA,GAFc;AAMvB;AACAO,EAAAA,OAAO,EAAE;AACPT,IAAAA,OAAO,EAAEG,MAAM,CAAC,CAAD,CADR;AAEPD,IAAAA,KAAK,EAAEC,MAAM,CAAC,GAAD;AAFN,GAPc;AAWvB;AACAO,EAAAA,QAAQ,EAAE;AACRV,IAAAA,OAAO,EAAEG,MAAM,CAAC,CAAD,CADP;AAERD,IAAAA,KAAK,EAAEC,MAAM,CAAC,CAAD;AAFL;AAZa,CAAzB;AAkBA,gBAAe,mBACb,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACA,oBAAC,cAAD;AACE,EAAA,OAAO,EAAEI,gBAAgB,CAACC,OAD5B;AAEE,EAAA,OAAO,EAAED,gBAAgB,CAACE,OAF5B;AAGE,EAAA,QAAQ,EAAEF,gBAAgB,CAACG,QAH7B;AAIE,EAAA,SAAS,EAAEZ,SAJb;AAKE,EAAA,SAAS,EAAC,eALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAOE,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,IAAZ;AAAiB,EAAA,SAAS,EAAEH,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAPF,eAQE,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,IAAZ;AAAiB,EAAA,SAAS,EAAEC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EARF,eASE,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,IAAZ;AAAiB,EAAA,SAAS,EAAEC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EATF,CADA,CADF,E,CAgBA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from 'react';\nimport Route from 'react-router-dom/Route';\nimport { spring, AnimatedSwitch } from 'react-router-transition';\n\nimport Home from \"./pages/home\";\nimport About from \"./pages/about\";\nimport Contact from \"./pages/contact\";\n\n// we need to map the `scale` prop we define below\n// to the transform style property\nfunction mapStyles(styles) {\n  return {\n    opacity: styles.opacity,\n    transform: `scale(${styles.scale})`,\n  };\n}\n\n// wrap the `spring` helper to use a bouncy config\nfunction bounce(val) {\n  return spring(val, {\n    stiffness: 330,\n    damping: 22,\n  });\n}\n\n// child matches will...\nconst bounceTransition = {\n  // start in a transparent, upscaled state\n  atEnter: {\n    opacity: 0,\n    scale: 1.2,\n  },\n  // leave in a transparent, downscaled state\n  atLeave: {\n    opacity: bounce(0),\n    scale: bounce(0.8),\n  },\n  // and rest at an opaque, normally-scaled state\n  atActive: {\n    opacity: bounce(1),\n    scale: bounce(1),\n  },\n};\n\nexport default () => (\n  <Router>\n  <AnimatedSwitch\n    atEnter={bounceTransition.atEnter}\n    atLeave={bounceTransition.atLeave}\n    atActive={bounceTransition.atActive}\n    mapStyles={mapStyles}\n    className=\"route-wrapper\"\n  >\n    <Route path=\"/a\" component={Home} />\n    <Route path=\"/b\" component={About} />\n    <Route path=\"/c\" component={Contact} />\n  </AnimatedSwitch>\n  </Router>\n);\n\n// // src/Routes.js\n// import React from \"react\";\n// import { BrowserRouter as Router } from \"react-router-dom\";\n// import Route from 'react-router-dom/Route';\n// import { spring, AnimatedSwitch } from 'react-router-transition';\n\n// // Import pages\n// import Home from \"./pages/home\";\n// import About from \"./pages/about\";\n// import Contact from \"./pages/contact\";\n// import Restaurants from \"./pages/restaurants\";\n// import Pinball from \"./pages/pacific-pinball\";\n// import Fitztastic from \"./pages/fitztastic\";\n\n// // we need to map the `scale` prop we define below\n// // to the transform style property\n// function mapStyles(styles) {\n//   return {\n//     opacity: styles.opacity,\n//     transform: `translateX(${styles.offset}%)`,\n//   };\n// }\n\n// // wrap the `spring` helper to use a bouncy config\n// function bounce(val) {\n//   return spring(val, {\n//     stiffness: 330,\n//     damping: 22,\n//   });\n// }\n\n// // child matches will...\n// const bounceTransition = {\n//   // start in a transparent, upscaled state\n//   atEnter: {\n//     opacity: 0,\n//     offset: -100,\n//   },\n//   // leave in a transparent, downscaled state\n//   atLeave: {\n//     opacity: bounce(0),\n//     offset: -100,\n//   },\n//   // and rest at an opaque, normally-scaled state\n//   atActive: {\n//     opacity: bounce(1),\n//     offset: 0,\n//   },\n// };\n\n\n// const Routes = () => {\n//   return (\n//     <Router>\n//       <AnimatedSwitch\n//         atEnter={bounceTransition.atEnter}\n//         atLeave={bounceTransition.atLeave}\n//         atActive={bounceTransition.atActive}\n//         mapStyles={mapStyles}\n//         className=\"route-wrapper\"\n//       >\n//         <Route exact path=\"/\" component={Home} />\n//         <Route path=\"/about\" component={About} />\n//         <Route path=\"/contact\" component={Contact} />\n//         <Route path=\"/sciarra-restaurants\" component={Restaurants} />\n//         <Route path=\"/pacific-pinball\" conponent={Pinball} />\n//         <Route path=\"/fitztastic\" conponent={Fitztastic} />\n//       </AnimatedSwitch>\n//     </Router>\n//   );\n// };\n\n// export default Routes;"]},"metadata":{},"sourceType":"module"}